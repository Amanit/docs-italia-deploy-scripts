# Single domain serving
server {
    index index.html README.html;
    listen 443 ssl default_server;
    server_name {{ rtd_domain }};
    access_log {{ nginx_logs }}/readthedocs-log host;
    root {{ rtd_root }}/public_web_root/front/it/latest/;

    add_header X-Frame-Options DENY;
    add_header X-Deity docs;

    client_max_body_size 50m;
    port_in_redirect off;

    location /favicon.ico {
        root {{ rtd_root }}/media/images;
        break;
    }

    location /robots.txt {
        root {{ rtd_root }}/media/;
        break;
    }

    location ^~ /media/ {
        expires 7d;
        alias {{ rtd_root }}/media/;
        add_header 'Access-Control-Allow-Origin' '*';
        add_header X-Deity docs;
    }

    location ^~ /static/ {
        expires 7d;
        alias {{ rtd_root }}/media/;
        add_header 'Access-Control-Allow-Origin' '*';
        add_header X-Deity docs;
    }

    location ^~ /api/ {
        proxy_pass http://{{ rtd_app_server }}:8002;
        proxy_buffering off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        access_log {{ nginx_logs }}/readthedocs-api.log host;
    }

    location ^~ /build/ {
        proxy_pass http://{{ rtd_app_server }}:8002;
        proxy_buffering off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        access_log {{ nginx_logs }}/readthedocs-api.log host;
    }

    location ^~ /bitbucket {
        proxy_pass http://{{ rtd_app_server }}:8002;
        proxy_buffering off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        access_log {{ nginx_logs }}/readthedocs-api.log host;
    }

    location ^~ /github {
        proxy_pass http://{{ rtd_app_server }}:8002;
        proxy_buffering off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        access_log {{ nginx_logs }}/readthedocs-api.log host;
    }

    # Path handled by django
    location = / {
        add_header X-Redirct-From Nginx;
        add_header X-Deity docs;
        try_files $uri $uri/ @fallback;
        error_page 403 404 500 = @fallback;
    }

    location ^~ /admin {
        add_header X-Redirct-From Nginx;
        add_header X-Deity docs;
        try_files $uri $uri/ @fallback;
        error_page 403 404 500 = @fallback;
    }

    location ^~ /dashboard {
        add_header X-Redirct-From Nginx;
        add_header X-Deity docs;
        try_files $uri $uri/ @fallback;
        error_page 403 404 500 = @fallback;
    }

    location ^~ /projects {
        try_files $uri $uri/ @fallback;
        error_page 403 404 500 = @fallback;
        add_header X-Subdomain-TryFiles True;
        add_header X-Served Nginx;
        add_header X-Deity docs;
    }

    # document serving
    location ~* ^/(?P<publisher>[^/]+)/(?P<project>[^/]+)/(?P<document>[^/]+)/ {
        # first submatch redirect to the default language / version
        location ~* ^/(?P<publisher>[^/]+)/(?P<project>[^/]+)/(?P<document>[^/]+)/$ {
            add_header X-Redirct-From Nginx;
            add_header X-Deity docs;
            rewrite ^ https://test.docs.local/$publisher/$project/$document/{{ rtd_default_language }}/{{ rtd_default_version }}/;
        }

        # second submatch serves any project file directly from the local disk. path group is needed to build the
        # try_files argument because we can't use $uri as we need to remove the prefix up to project
        location ~* ^/(?P<publisher>[^/]+)/(?P<project>[^/]+)/(?P<document>[^/]+)/(?P<lang>\w\w)/(?P<version>[^/]+)/(?P<path>.*)$ {
            root /home/docs/docs.italia.it/public_web_root/;
            try_files /$document/$lang/$version/$path /$document/$lang/$version/index.html =404;
        }
    }

    # publisher / projects home page
    location ~* ^/(?P<publisher>[^/]+)/(?P<project>[^/]+)/ {
        try_files $uri $uri/ @fallback;
        error_page 403 404 500 = @fallback;
        add_header X-Subdomain-TryFiles True;
        add_header X-Served Nginx;
        add_header X-Deity docs;
    }

    location ~* ^/(?P<publisher>[^/]+)/ {
        try_files $uri $uri/ @fallback;
        error_page 403 404 500 = @fallback;
        add_header X-Subdomain-TryFiles True;
        add_header X-Served Nginx;
        add_header X-Deity docs;
    }

    location @fallback {
        proxy_pass http://{{ rtd_app_server }}:8001;
        proxy_buffering off;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        add_header X-Fallback True;
        add_header X-Served Django;
        add_header X-Deity docs;
    }

    # Sendfile support for serving from Python
    location /user_builds/ {
        internal;
        root {{ rtd_root }};
        add_header X-Served Nginx-Sendfile;
        add_header X-Deity docs;
    }
    location /public_web_root {
        internal;
        root {{ rtd_root }};
        add_header X-Served Nginx-Sendfile;
        add_header X-Deity docs;
    }
    # Sendfile support for serving media artifacts in Python
    location /prod_artifacts/ {
        internal;
        root   {{ rtd_root }};
        add_header X-Served Nginx-Sendfile;
        add_header X-Deity docs;
    }

    # Let's encrypt
    location ^~ /.well-known/acme-challenge/ {
        default_type "text/plain";
        root /var/www/letsencrypt;
    }

    ssl_certificate /etc/letsencrypt/live/{{ rtd_domain }}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/{{ rtd_domain }}/privkey.pem; # managed by Certbot
}

server {
    if ($host = {{ rtd_domain }}) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    location ^~ /api/ {
        proxy_pass http://{{ rtd_app_server }}:8002;
        proxy_buffering off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        access_log {{ nginx_logs }}/readthedocs-api.log host;
    }

    location ^~ /build/ {
        proxy_pass http://{{ rtd_app_server }}:8002;
        proxy_buffering off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        access_log {{ nginx_logs }}/readthedocs-api.log host;
    }

    listen 80 default_server;
    server_name {{ rtd_domain }};
    # DISABLE THIS FOR NOW return 404; # managed by Certbot
}
